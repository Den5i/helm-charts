{{ if eq .Values.cicd_proxy.network.ingress_type "nginx" }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "20"
    nginx.ingress.kubernetes.io/backend-protocol: https
    nginx.ingress.kubernetes.io/secure-backends: 'true'
    nginx.org/ssl-services: kube-oidc-proxy-{{ .Release.Name }}
    kubernetes.io/ingress.class: nginx
    {{ range $key,$value := .Values.cicd_proxy.network.ingress_annotations }}
    {{ $key }}: {{ quote $value }}
    {{ end }}
  name: cicdproxy-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: cicd-proxy
    app.kubernetes.io/instance: cicdproxy-{{ .Release.Name }}
    app.kubernetes.io/component: ingress-nginx
    app.kubernetes.io/part-of: cicd-proxy
spec:
  rules:
  
  - host: {{ .Values.cicd_proxy.network.api_server_host }}
    http:
      paths:
      - backend:
          service:
            name: kube-oidc-proxy-{{ .Release.Name }}
            port:
              number: 443
        path: "/"
        pathType: Prefix
  tls:
  - hosts:
    - {{ .Values.cicd_proxy.network.api_server_host }}
    secretName: cicd-proxy-tls-certificate
{{ end }}