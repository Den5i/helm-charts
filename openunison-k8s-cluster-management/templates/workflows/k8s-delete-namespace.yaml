{{- $root := . -}}
---
apiVersion: openunison.tremolo.io/v1
kind: Workflow
metadata:
  name: k8s-delete-namespace
  namespace: {{ .Release.Namespace }}
spec:
  description: Delete Namespace
  inList: false
  label: Delete Namespace
  orgId: 04901973-5f4c-46d9-9e22-55e88e168776
  tasks: |-
             - taskType: customTask
               className: com.tremolosecurity.provisioning.customTasks.PrintUserInfo
               params:
                 message: in k8s-delete-namespace

             - taskType: customTask
               className: com.tremolosecurity.provisioning.customTasks.CopyFromUserToRequest
               params:
                 attribute:
                 - nameSpace
                 - cluster
                 keepInUser: "false"
             - taskType: customTask
               className: com.tremolosecurity.provisioning.customTasks.LoadAttributes
               params:
                 nameAttr: uid
                 name: 
                 - givenname
                 - sn
                 - mail
  
             {{ if .Values.openunison.naas.groups.internal.enabled }}
             # Remove all members from the groups
             
             - taskType: customTask
               className: com.tremolosecurity.provisioning.customTasks.DeleteGroupMembers
               params:
                 uidAttributeName: uid
                 removeWorkflow: remove-user-from-group
                 groupToDelete: cn=approvers-k8s-$cluster$-$nameSpace$,ou=groups,ou=shadow,o=Tremolo
                 groupNameAttribute: cn
                 requestor: system
             
             {{ range $role := .Values.openunison.naas.groups.default }}
             - taskType: customTask
               className: com.tremolosecurity.provisioning.customTasks.DeleteGroupMembers
               params:
                 uidAttributeName: uid
                 removeWorkflow: remove-user-from-group
                 groupToDelete: cn=k8s-namespace-{{ $role.name }}-$cluster$-$nameSpace${{ $root.Values.openunison.naas.groups.internal.suffix }},ou=groups,ou=shadow,o=Tremolo
                 groupNameAttribute: cn
                 requestor: system
             {{ end }}

             {{ range $role := .Values.openunison.naas.groups.roles }}
             - taskType: customTask
               className: com.tremolosecurity.provisioning.customTasks.DeleteGroupMembers
               params:
                 uidAttributeName: uid
                 removeWorkflow: remove-user-from-group
                 groupToDelete: cn=k8s-namespace-{{ $role.name }}-$cluster$-$nameSpace${{ $root.Values.openunison.naas.groups.internal.suffix }},ou=groups,ou=shadow,o=Tremolo
                 groupNameAttribute: cn
                 requestor: system
             {{ end }}

             
             # Remove the groups
             - taskType: customTask
               className: com.tremolosecurity.provisioning.customTasks.RemoveGroupFromStore
               params:
                 name: 
                 - approvers-k8s-$cluster$-$nameSpace$
                 {{ range $role := .Values.openunison.naas.groups.default }}
                 - k8s-namespace-{{ $role.name }}-$cluster$-$nameSpace${{ $root.Values.openunison.naas.groups.internal.suffix }}
                 {{ end }}
                 {{ range $role := .Values.openunison.naas.groups.roles }}
                 - k8s-namespace-{{ $role.name }}-$cluster$-$nameSpace${{ $root.Values.openunison.naas.groups.internal.suffix }}
                 {{ end }}
                 target: jitdb
             

             # Delete known namespace objects
             {{ range $role := .Values.openunison.naas.groups.default }}
             {{ range $bind := $role.bindings }}
             - taskType: customTask
               className: com.tremolosecurity.provisioning.tasks.DeleteK8sObject
               params:
                 targetName: $cluster$
                 kind:  RoleBinding
                 url: /apis/rbac.authorization.k8s.io/v1/namespaces/$nameSpace$/rolebindings/{{ $bind.binding }}-binding{{ $root.Values.openunison.naas.groups.internal.suffix }}
                 writeToRequest: "$useGit$"
                 requestAttribute: git-secret-namespace-$cluster$-$nameSpace$
                 path: /yaml/ns/$nameSpace$/rolebindings/{{ $bind.binding }}-binding{{ $root.Values.openunison.naas.groups.internal.suffix }}.yaml
             {{ end }}
             {{ end }}

             {{ range $role := .Values.openunison.naas.groups.roles }}
             {{ range $bind := $role.bindings }}
             - taskType: customTask
               className: com.tremolosecurity.provisioning.tasks.DeleteK8sObject
               params:
                 targetName: $cluster$
                 kind:  RoleBinding
                 url: /apis/rbac.authorization.k8s.io/v1/namespaces/$nameSpace$/rolebindings/{{ $bind.binding }}-binding{{ $root.Values.openunison.naas.groups.internal.suffix }}
                 writeToRequest: "$useGit$"
                 requestAttribute: git-secret-namespace-$cluster$-$nameSpace$
                 path: /yaml/ns/$nameSpace$/rolebindings/{{ $bind.binding }}-binding{{ $root.Values.openunison.naas.groups.internal.suffix }}.yaml
             {{ end }}
             {{ end }}

             

             {{ end }}

             {{ if .Values.openunison.naas.groups.external.enabled }}
             # Remove all members from the groups
             {{ range $role := .Values.openunison.naas.groups.default }}
             - taskType: customTask
               className: com.tremolosecurity.provisioning.customTasks.DeleteGroupMembers
               params:
                 uidAttributeName: uid
                 removeWorkflow: remove-user-from-group
                 groupToDelete: cn=k8s-namespace-{{ $role.name }}-$cluster$-$nameSpace${{ $root.Values.openunison.naas.groups.external.suffix }},ou=groups,ou=shadow,o=Tremolo
                 groupNameAttribute: cn
                 requestor: system
             {{ end }}

             {{ range $role := .Values.openunison.naas.groups.roles }}
             - taskType: customTask
               className: com.tremolosecurity.provisioning.customTasks.DeleteGroupMembers
               params:
                 uidAttributeName: uid
                 removeWorkflow: remove-user-from-group
                 groupToDelete: cn=k8s-namespace-{{ $role.name }}-$cluster$-$nameSpace${{ $root.Values.openunison.naas.groups.external.suffix }},ou=groups,ou=shadow,o=Tremolo
                 groupNameAttribute: cn
                 requestor: system
             {{ end }}


             # Remove the groups
             - taskType: customTask
               className: com.tremolosecurity.provisioning.customTasks.RemoveGroupFromStore
               params:
                 name: 
                 {{ range $role := .Values.openunison.naas.groups.default }}
                 - k8s-namespace-{{ $role.name }}-$cluster$-$nameSpace${{ $root.Values.openunison.naas.groups.external.suffix }}
                 {{ end }}
                 {{ range $role := .Values.openunison.naas.groups.roles }}
                 - k8s-namespace-{{ $role.name }}-$cluster$-$nameSpace${{ $root.Values.openunison.naas.groups.external.suffix }}
                 {{ end }}
                 target: jitdb
             

             # Delete known namespace objects
             {{ range $role := .Values.openunison.naas.groups.default }}
             {{ range $bind := $role.bindings }}
             - taskType: customTask
               className: com.tremolosecurity.provisioning.tasks.DeleteK8sObject
               params:
                 targetName: $cluster$
                 kind:  RoleBinding
                 url: /apis/rbac.authorization.k8s.io/v1/namespaces/$nameSpace$/rolebindings/{{ $bind.binding }}-binding
                 writeToRequest: "$useGit$"
                 requestAttribute: git-secret-namespace-$cluster$-$nameSpace$
                 path: /yaml/ns/$nameSpace$/rolebindings/{{ $bind.binding }}-binding.yaml
             {{ end }}

             - taskType: customTask
               className: com.tremolosecurity.provisioning.tasks.DeleteK8sObject
               params:
                 targetName: $cluster$
                 kind:  GroupMetaData
                 url: /apis/openunison.tremolo.io/v1/namespaces/{{ $root.Release.Namespace }}/groupmetadatas/k8s-namespace-viewer-$cluster$-$nameSpace$
                 writeToRequest: "$useGit$"
                 requestAttribute: git-secret-namespace-$cluster$-$nameSpace$
                 path: /yaml/ns/$nameSpace$/groupmetadatas/k8s-namespace-viewer-$cluster$-$nameSpace$.yaml
             {{ end }}

             {{ range $role := .Values.openunison.naas.groups.roles }}
             {{ range $bind := $role.bindings }}
             - taskType: customTask
               className: com.tremolosecurity.provisioning.tasks.DeleteK8sObject
               params:
                 targetName: $cluster$
                 kind: RoleBinding
                 url: /apis/rbac.authorization.k8s.io/v1/namespaces/$nameSpace$/rolebindings/{{ $bind.binding }}-binding
                 writeToRequest: "$useGit$"
                 requestAttribute: git-secret-namespace-$cluster$-$nameSpace$
                 path: /yaml/ns/$nameSpace$/rolebindings/{{ $bind.binding }}-binding.yaml
             {{ end }}

             - taskType: customTask
               className: com.tremolosecurity.provisioning.tasks.DeleteK8sObject
               params:
                 targetName: $cluster$
                 kind:  GroupMetaData
                 url: /apis/openunison.tremolo.io/v1/namespaces/{{ $root.Release.Namespace }}/groupmetadatas/k8s-namespace-{{ $role.name }}-$cluster$-$nameSpace$
                 writeToRequest: "$useGit$"
                 requestAttribute: git-secret-namespace-$cluster$-$nameSpace$
                 path: /yaml/ns/$nameSpace$/groupmetadatas/k8s-namespace-{{ $role.name }}-$cluster$-$nameSpace$.yaml
             {{ end }}
             {{ end }}
             
             - taskType: customTask
               className: com.tremolosecurity.provisioning.tasks.DeleteK8sObject
               params:
                 targetName: $cluster$
                 kind: Namespace
                 url: /api/v1/namespaces/$nameSpace$
                 writeToRequest: "$useGit$"
                 requestAttribute: git-secret-cluster-$cluster$-$nameSpace$
                 path: /yaml/ns/$nameSpace$/$nameSpace$.yaml


             # For GitOps, delete the service account and a rolebinding that allow the gitops
             # controller to allow the controller 
             - taskType: ifAttrHasValue
               name: useGit
               value: "true"
               onSuccess:
               - taskType: customTask
                 className: com.tremolosecurity.provisioning.tasks.DeleteK8sObject
                 params:
                   targetName: $cluster$
                   kind: ServiceAccount
                   url: /api/v1/serviceaccounts/gitops
                   writeToRequest: "true"
                   requestAttribute: git-secret-cluster-$cluster$-$nameSpace$
                   path: /yaml/ns/$nameSpace$/serviceaccounts/gitops.yaml

               - taskType: customTask
                 className: com.tremolosecurity.provisioning.tasks.DeleteK8sObject
                 params:
                   targetName: $cluster$
                   kind: RoleBinding
                   url: /apis/rbac.authorization.k8s.io/v1/namespaces/$nameSpace$/rolebindings/gitops
                   writeToRequest: "true"
                   requestAttribute: git-secret-cluster-$cluster$-$nameSpace$
                   path: /yaml/ns/$nameSpace$/rolebindings/gitops-controller-sa-binding.yaml

             - taskType: ifAttrHasValue
               name: useGit
               value: "true"
               onSuccess:
               # GitOps - Run Job to push to cluster repo
               - taskType: customTask
                 className: com.tremolosecurity.provisioning.tasks.PushToGit
                 params:
                   secretName: sshkey-cluster-$cluster$
                   nameSpace: openunison
                   target: k8s
                   keyName: id_rsa
                   gitRepo: $clusterGitUrl$
                   requestObject: git-secret-cluster-$cluster$-$nameSpace$
                   commitMsg: For workflow $WORKFLOW.id$

               # GitOps - Run Job to push to namespace repo
               - taskType: customTask
                 className: com.tremolosecurity.provisioning.tasks.PushToGit
                 params:
                   secretName: sshkey-namespace-$cluster$-$nameSpace$
                   nameSpace: openunison
                   target: k8s
                   keyName: id_rsa
                   gitRepo: $namespaceGitUrl$
                   requestObject: git-secret-namespace-$cluster$-$nameSpace$
                   commitMsg: For workflow $WORKFLOW.id$

               # GitOps - Delete the secret used to talk to the git repo
               - taskType: customTask
                 className: com.tremolosecurity.provisioning.tasks.DeleteK8sObject
                 params:
                   targetName: k8s
                   kind: Secret
                   url: /api/v1/namespaces/{{ .Release.Namespace }}/secrets/sshkey-namespace-$cluster$-$nameSpace$
                   writeToRequest: "false"

               

             - taskType: notifyUser
               subject: Namespace delete
               mailAttrib: mail
               msg: The namespace $nameSpace$ has been deleted